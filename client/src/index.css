@import url('https://fonts.googleapis.com/css2?family=Inter:wght@100;200;300;400;500;600;700;800;900&display=swap');

@tailwind base;
@tailwind components;
@tailwind utilities;

/* MODERN VISUAL FOUNDATION */
:root {
  --button-outline: rgba(255,255,255, .10);
  --badge-outline: rgba(255,255,255, .05);

  /* Automatic computation of border around primary / danger buttons */
  --opaque-button-border-intensity: 9; /* In terms of percentages */

  /* Dark mode elevation system */
  --elevate-1: rgba(255,255,255, .02);
  --elevate-2: rgba(255,255,255, .04);
  --elevate-3: rgba(255,255,255, .06);
  --elevate-glow: rgba(255, 255, 255, 0.05);

  /* Premium Purple Dark Theme as Default */
  --background: 265 35% 8%;
  --foreground: 280 10% 98%;
  --border: 270 40% 18%;
  
  --card: 270 45% 12%;
  --card-foreground: 280 8% 95%;
  --card-border: 270 50% 22%;
  
  --sidebar: 270 45% 12%;
  --sidebar-foreground: 275 12% 90%;
  --sidebar-border: 270 50% 22%;
  --sidebar-primary: 270 85% 60%;
  --sidebar-primary-foreground: 280 10% 98%;
  --sidebar-accent: 270 40% 20%;
  --sidebar-accent-foreground: 275 15% 85%;
  --sidebar-ring: 270 85% 60%;
  
  --popover: 270 45% 12%;
  --popover-foreground: 275 12% 90%;
  --popover-border: 270 50% 22%;
  
  --primary: 270 85% 60%;
  --primary-foreground: 280 10% 98%;
  --secondary: 270 40% 18%;
  --secondary-foreground: 275 15% 90%;
  --muted: 265 35% 14%;
  --muted-foreground: 270 15% 65%;
  --accent: 275 50% 24%;
  --accent-foreground: 275 15% 90%;
  --destructive: 0 84% 60%;
  --destructive-foreground: 280 10% 98%;

  --input: 270 40% 18%;
  --ring: 270 85% 60%;
  --chart-1: 270 85% 60%;
  --chart-2: 290 100% 70%;
  --chart-3: 45 90% 60%;
  --chart-4: 320 75% 65%;
  --chart-5: 250 85% 65%;

  /* Modern Typography System */
  --font-sans: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
  --font-serif: Georgia, serif;
  --font-mono: 'SF Mono', Monaco, 'Cascadia Code', 'Roboto Mono', Consolas, 'Courier New', monospace;
  --radius: .75rem; /* Enhanced border radius */
  
  /* Advanced Shadow System */
  --shadow-2xs: 0px 1px 2px 0px rgba(0, 0, 0, 0.02);
  --shadow-xs: 0px 1px 3px 0px rgba(0, 0, 0, 0.04), 0px 1px 2px 0px rgba(0, 0, 0, 0.02);
  --shadow-sm: 0px 1px 3px 0px rgba(0, 0, 0, 0.08), 0px 1px 2px 0px rgba(0, 0, 0, 0.04);
  --shadow: 0px 4px 6px -1px rgba(0, 0, 0, 0.08), 0px 2px 4px -1px rgba(0, 0, 0, 0.04);
  --shadow-md: 0px 10px 15px -3px rgba(0, 0, 0, 0.08), 0px 4px 6px -2px rgba(0, 0, 0, 0.04);
  --shadow-lg: 0px 20px 25px -5px rgba(0, 0, 0, 0.08), 0px 10px 10px -5px rgba(0, 0, 0, 0.02);
  --shadow-xl: 0px 25px 50px -12px rgba(0, 0, 0, 0.15), 0px 10px 25px -8px rgba(0, 0, 0, 0.08);
  --shadow-2xl: 0px 50px 100px -20px rgba(0, 0, 0, 0.25);
  --shadow-glow: 0px 0px 20px rgba(99, 102, 241, 0.15), 0px 0px 60px rgba(99, 102, 241, 0.1);
  --shadow-premium: 0px 32px 64px rgba(0, 0, 0, 0.12), 0px 16px 32px rgba(0, 0, 0, 0.08);
  
  --tracking-normal: 0em;
  --spacing: 0.25rem;

  /* Premium Brand Gradients */
  --gradient-primary: linear-gradient(135deg, #8b5cf6 0%, #a855f7 25%, #c084fc 50%, #ddd6fe 100%);
  --gradient-secondary: linear-gradient(135deg, #fbbf24 0%, #f59e0b 25%, #d97706 50%, #92400e 100%);
  --gradient-brand: linear-gradient(135deg, #6366f1 0%, #8b5cf6 25%, #a855f7 50%, #c084fc 75%, #e879f9 100%);
  --gradient-cosmic: linear-gradient(135deg, #1e1b4b 0%, #312e81 15%, #4338ca 30%, #6366f1 45%, #8b5cf6 60%, #a855f7 75%, #c084fc 90%, #e879f9 100%);
  --gradient-glass: linear-gradient(135deg, rgba(139, 92, 246, 0.15) 0%, rgba(168, 85, 247, 0.08) 50%, rgba(192, 132, 252, 0.05) 100%);
  --gradient-gold: linear-gradient(135deg, #fbbf24 0%, #f59e0b 25%, #d97706 50%, #b45309 75%, #92400e 100%);
  --gradient-platinum: linear-gradient(135deg, #f8fafc 0%, #e2e8f0 25%, #cbd5e1 50%, #94a3b8 75%, #64748b 100%);
  --gradient-luxury: linear-gradient(135deg, #6366f1 0%, #8b5cf6 20%, #a855f7 40%, #fbbf24 60%, #f59e0b 80%, #d97706 100%);
  
  /* Premium Glassmorphism */
  --glass-bg: rgba(139, 92, 246, 0.12);
  --glass-border: rgba(168, 85, 247, 0.20);
  --glass-blur: 24px;
  --glass-glow: 0px 0px 32px rgba(139, 92, 246, 0.25), 0px 0px 64px rgba(168, 85, 247, 0.15);
  --glass-shadow: 0px 16px 32px rgba(0, 0, 0, 0.4), 0px 8px 16px rgba(0, 0, 0, 0.3);
  --glass-highlight: rgba(255, 255, 255, 0.15);
  
  /* Animation durations */
  --duration-fast: 150ms;
  --duration-normal: 300ms;
  --duration-slow: 500ms;
  --duration-slower: 750ms;

  /* Automatically computed borders - intensity can be controlled by the user by the --opaque-button-border-intensity setting */

  /* Fallback for older browsers */
  --sidebar-primary-border: hsl(var(--sidebar-primary));
  --sidebar-primary-border: hsl(from hsl(var(--sidebar-primary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --sidebar-accent-border: hsl(var(--sidebar-accent));
  --sidebar-accent-border: hsl(from hsl(var(--sidebar-accent)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --primary-border: hsl(var(--primary));
  --primary-border: hsl(from hsl(var(--primary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --secondary-border: hsl(var(--secondary));
  --secondary-border: hsl(from hsl(var(--secondary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --muted-border: hsl(var(--muted));
  --muted-border: hsl(from hsl(var(--muted)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --accent-border: hsl(var(--accent));
  --accent-border: hsl(from hsl(var(--accent)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --destructive-border: hsl(var(--destructive));
  --destructive-border: hsl(from hsl(var(--destructive)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);
}

/* LIGHT MODE (Alternative Theme) - Clean & Minimal */
.light {
  --button-outline: rgba(0,0,0, .10);
  --badge-outline: rgba(0,0,0, .05);

  --opaque-button-border-intensity: -8;

  /* Light mode elevation */
  --elevate-1: rgba(0,0,0, .03);
  --elevate-2: rgba(0,0,0, .08);
  --elevate-3: rgba(0,0,0, .15);
  --elevate-glow: rgba(99, 102, 241, 0.15);

  /* Light theme as alternative */
  --background: 240 20% 98%;
  --foreground: 240 15% 15%;
  --border: 240 10% 85%;

  --card: 240 15% 96%;
  --card-foreground: 240 15% 18%;
  --card-border: 240 8% 90%;

  --sidebar: 240 12% 94%;
  --sidebar-foreground: 240 15% 20%;
  --sidebar-border: 240 8% 88%;
  --sidebar-primary: 250 85% 15%;
  --sidebar-primary-foreground: 250 85% 95%;
  --sidebar-accent: 240 15% 90%;
  --sidebar-accent-foreground: 240 15% 25%;
  --sidebar-ring: 250 85% 15%;

  --popover: 240 12% 92%;
  --popover-foreground: 240 15% 22%;
  --popover-border: 240 8% 86%;

  --primary: 250 85% 15%;
  --primary-foreground: 250 85% 95%;
  --secondary: 240 8% 88%;
  --secondary-foreground: 240 15% 25%;
  --muted: 240 6% 90%;
  --muted-foreground: 240 10% 45%;
  --accent: 240 12% 86%;
  --accent-foreground: 240 15% 28%;
  --destructive: 0 84% 30%;
  --destructive-foreground: 0 84% 95%;

  --input: 240 15% 82%;
  --ring: 250 85% 15%;
  --chart-1: 250 85% 25%;
  --chart-2: 220 100% 35%;
  --chart-3: 45 90% 45%;
  --chart-4: 280 75% 35%;
  --chart-5: 200 85% 35%;

  /* Light mode shadows */
  --shadow-2xs: 0px 1px 2px 0px rgba(0, 0, 0, 0.02);
  --shadow-xs: 0px 1px 3px 0px rgba(0, 0, 0, 0.04), 0px 1px 2px 0px rgba(0, 0, 0, 0.02);
  --shadow-sm: 0px 1px 3px 0px rgba(0, 0, 0, 0.08), 0px 1px 2px 0px rgba(0, 0, 0, 0.04);
  --shadow: 0px 4px 6px -1px rgba(0, 0, 0, 0.08), 0px 2px 4px -1px rgba(0, 0, 0, 0.04);
  --shadow-md: 0px 10px 15px -3px rgba(0, 0, 0, 0.08), 0px 4px 6px -2px rgba(0, 0, 0, 0.04);
  --shadow-lg: 0px 20px 25px -5px rgba(0, 0, 0, 0.08), 0px 10px 10px -5px rgba(0, 0, 0, 0.02);
  --shadow-xl: 0px 25px 50px -12px rgba(0, 0, 0, 0.15), 0px 10px 25px -8px rgba(0, 0, 0, 0.08);
  --shadow-2xl: 0px 50px 100px -20px rgba(0, 0, 0, 0.25);
  --shadow-glow: 0px 0px 20px rgba(99, 102, 241, 0.15), 0px 0px 60px rgba(99, 102, 241, 0.1);
  --shadow-premium: 0px 32px 64px rgba(0, 0, 0, 0.12), 0px 16px 32px rgba(0, 0, 0, 0.08);

  /* Light mode gradients */
  --gradient-cosmic: linear-gradient(135deg, #1e1b4b 0%, #312e81 25%, #4338ca 50%, #7c3aed 75%, #c026d3 100%);
  --gradient-glass: linear-gradient(135deg, rgba(255, 255, 255, 0.1) 0%, rgba(255, 255, 255, 0.05) 100%);
  
  /* Light mode glass effects */
  --glass-bg: rgba(255, 255, 255, 0.08);
  --glass-border: rgba(255, 255, 255, 0.12);
}

@layer base {
  * {
    @apply border-border;
  }

  body {
    @apply font-sans antialiased bg-background text-foreground;
  }
}

/**
 * Using the elevate system.
 * Automatic contrast adjustment.
 *
 * <element className="hover-elevate" />
 * <element className="active-elevate-2" />
 *
 * // Using the tailwind utility when a data attribute is "on"
 * <element className="toggle-elevate data-[state=on]:toggle-elevated" />
 * // Or manually controlling the toggle state
 * <element className="toggle-elevate toggle-elevated" />
 *
 * Elevation systems have to handle many states.
 * - not-hovered, vs. hovered vs. active  (three mutually exclusive states)
 * - toggled or not
 * - focused or not (this is not handled with these utilities)
 *
 * Even without handling focused or not, this is six possible combinations that
 * need to be distinguished from eachother visually.
 */
@layer utilities {

  /* Hide ugly search cancel button in Chrome until we can style it properly */
  input[type="search"]::-webkit-search-cancel-button {
    @apply hidden;
  }

  /* Placeholder styling for contentEditable div */
  [contenteditable][data-placeholder]:empty::before {
    content: attr(data-placeholder);
    color: hsl(var(--muted-foreground));
    pointer-events: none;
  }

  /* .no-default-hover-elevate/no-default-active-elevate is an escape hatch so consumers of
   * buttons/badges can remove the automatic brightness adjustment on interactions
   * and program their own. */
  .no-default-hover-elevate {}

  .no-default-active-elevate {}


  /**
   * Toggleable backgrounds go behind the content. Hoverable/active goes on top.
   * This way they can stack/compound. Both will overlap the parent's borders!
   * So borders will be automatically adjusted both on toggle, and hover/active,
   * and they will be compounded.
   */
  .toggle-elevate::before,
  .toggle-elevate-2::before {
    content: "";
    pointer-events: none;
    position: absolute;
    inset: 0px;
    /*border-radius: inherit;   match rounded corners */
    border-radius: inherit;
    z-index: -1;
    /* sits behind content but above backdrop */
  }

  .toggle-elevate.toggle-elevated::before {
    background-color: var(--elevate-2);
  }

  /* If there's a 1px border, adjust the inset so that it covers that parent's border */
  .border.toggle-elevate::before {
    inset: -1px;
  }

  /* Does not work on elements with overflow:hidden! */
  .hover-elevate:not(.no-default-hover-elevate),
  .active-elevate:not(.no-default-active-elevate),
  .hover-elevate-2:not(.no-default-hover-elevate),
  .active-elevate-2:not(.no-default-active-elevate) {
    position: relative;
    z-index: 0;
  }

  .hover-elevate:not(.no-default-hover-elevate)::after,
  .active-elevate:not(.no-default-active-elevate)::after,
  .hover-elevate-2:not(.no-default-hover-elevate)::after,
  .active-elevate-2:not(.no-default-active-elevate)::after {
    content: "";
    pointer-events: none;
    position: absolute;
    inset: 0px;
    /*border-radius: inherit;   match rounded corners */
    border-radius: inherit;
    z-index: 999;
    /* sits in front of content */
  }

  .hover-elevate:hover:not(.no-default-hover-elevate)::after,
  .active-elevate:active:not(.no-default-active-elevate)::after {
    background-color: var(--elevate-1);
  }

  .hover-elevate-2:hover:not(.no-default-hover-elevate)::after,
  .active-elevate-2:active:not(.no-default-active-elevate)::after {
    background-color: var(--elevate-2);
  }

  /* If there's a 1px border, adjust the inset so that it covers that parent's border */
  .border.hover-elevate:not(.no-hover-interaction-elevate)::after,
  .border.active-elevate:not(.no-active-interaction-elevate)::after,
  .border.hover-elevate-2:not(.no-hover-interaction-elevate)::after,
  .border.active-elevate-2:not(.no-active-interaction-elevate)::after,
  .border.hover-elevate:not(.no-hover-interaction-elevate)::after {
    inset: -1px;
  }

  /* ===== CLEAN MINIMAL UTILITIES ===== */

  /* Simple fade-in animation for clean loading */
  @keyframes fade-in {
    0% { opacity: 0; }
    100% { opacity: 1; }
  }

  .animate-fade-in {
    animation: fade-in 0.3s ease-out forwards;
  }

  /* Custom Scrollbar */
  ::-webkit-scrollbar {
    width: 8px;
  }

  ::-webkit-scrollbar-track {
    background: hsl(var(--background));
  }

  ::-webkit-scrollbar-thumb {
    background: hsl(var(--muted));
    border-radius: 4px;
  }

  ::-webkit-scrollbar-thumb:hover {
    background: hsl(var(--muted-foreground));
  }

  /* Smooth Scroll */
  html {
    scroll-behavior: smooth;
  }

  /* Glassmorphic Panel Styles */
  .glassmorphic-panel {
    background: rgba(255, 255, 255, 0.08);
    backdrop-filter: blur(20px);
    border: 1px solid rgba(255, 255, 255, 0.12);
    box-shadow: 
      0 25px 50px -12px rgba(0, 0, 0, 0.25),
      0 0 40px rgba(139, 92, 246, 0.15),
      inset 0 1px 0 rgba(255, 255, 255, 0.1);
  }

  /* Enhanced Focus States */
  .focus-glow:focus {
    outline: none;
    box-shadow: 0 0 0 3px rgba(99, 102, 241, 0.3);
  }

  /* Hero Gradient Variables */
  .hero-stripe {
    --hero-gradient: linear-gradient(135deg, 
      hsl(260, 80%, 20%) 0%,
      hsl(270, 85%, 25%) 20%,
      hsl(280, 90%, 35%) 40%,
      hsl(290, 95%, 45%) 60%,
      hsl(20, 90%, 55%) 80%,
      hsl(35, 85%, 65%) 100%
    );
    
    --hero-text-gradient: linear-gradient(135deg, 
      hsl(260, 90%, 15%) 0%,
      hsl(270, 95%, 20%) 15%,
      hsl(280, 100%, 30%) 30%,
      hsl(290, 100%, 40%) 45%,
      hsl(300, 95%, 50%) 60%,
      hsl(20, 95%, 60%) 75%,
      hsl(35, 90%, 70%) 90%,
      hsl(45, 85%, 75%) 100%
    );
  }

  /* Stripe-style Animations */
  @keyframes fadeUpStagger {
    0% { 
      opacity: 0; 
      transform: translateY(30px);
    }
    100% { 
      opacity: 1; 
      transform: translateY(0);
    }
  }

  @keyframes gradientShift {
    0% { background-position: 0% 50%; }
    50% { background-position: 100% 50%; }
    100% { background-position: 0% 50%; }
  }

  @keyframes gradientTextShift {
    0% { 
      background-position: 0% 50%;
      filter: brightness(1) contrast(1.1) saturate(1.2);
    }
    25% { 
      background-position: 50% 25%;
      filter: brightness(1.05) contrast(1.15) saturate(1.25);
    }
    50% { 
      background-position: 100% 50%;
      filter: brightness(1.1) contrast(1.2) saturate(1.3);
    }
    75% { 
      background-position: 75% 75%;
      filter: brightness(1.05) contrast(1.15) saturate(1.25);
    }
    100% { 
      background-position: 0% 50%;
      filter: brightness(1) contrast(1.1) saturate(1.2);
    }
  }

  @keyframes reflectionSweep {
    0% {
      transform: translateX(-150%) skewX(-15deg);
      opacity: 0;
    }
    20% {
      opacity: 0.8;
    }
    80% {
      opacity: 0.8;
    }
    100% {
      transform: translateX(400%) skewX(-15deg);
      opacity: 0;
    }
  }

  /* Stripe-style gradient text with reflection */
  .stripe-gradient-text {
    position: relative;
    -webkit-text-fill-color: transparent;
    text-fill-color: transparent;
  }

  .stripe-gradient-text::after {
    content: attr(data-text);
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(110deg, 
      transparent 0%, 
      transparent 40%,
      rgba(255, 255, 255, 0.8) 50%, 
      transparent 60%,
      transparent 100%
    );
    background-size: 200% 100%;
    -webkit-background-clip: text;
    background-clip: text;
    -webkit-text-fill-color: transparent;
    text-fill-color: transparent;
    animation: reflectionSweep 3s ease-in-out infinite;
    animation-delay: 2s;
    pointer-events: none;
    font: inherit;
    white-space: inherit;
    overflow: hidden;
  }

  @keyframes float {
    0%, 100% { transform: translateY(0px); }
    50% { transform: translateY(-10px); }
  }

  @keyframes pulse-glow {
    0%, 100% { 
      box-shadow: 0 0 20px rgba(139, 92, 246, 0.3),
                  0 0 40px rgba(139, 92, 246, 0.1);
    }
    50% { 
      box-shadow: 0 0 30px rgba(139, 92, 246, 0.5),
                  0 0 60px rgba(139, 92, 246, 0.2);
    }
  }

  /* Stripe-style smooth transitions */
  .smooth-transform {
    transition: transform 0.4s cubic-bezier(0.2, 0.8, 0.2, 1),
                opacity 0.3s ease-out;
  }

  .hover-lift:hover {
    transform: translateY(-4px);
    transition: transform 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  }

  /* Performance optimized animations */
  .animate-fadeUpStagger {
    animation: fadeUpStagger 0.6s cubic-bezier(0.4, 0, 0.2, 1) forwards;
  }

  .animate-float {
    animation: float 6s ease-in-out infinite;
  }

  .animate-pulse-glow {
    animation: pulse-glow 4s ease-in-out infinite;
  }

  /* Reduced motion support */
  @media (prefers-reduced-motion: reduce) {
    .animate-fadeUpStagger,
    .animate-float,
    .animate-pulse-glow {
      animation: none;
    }
    
    .smooth-transform,
    .hover-lift {
      transition: none;
    }
  }
}